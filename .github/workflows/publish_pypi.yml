name: Publish to PyPi

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  # update-version:
  #   name: Bump Version and Commit
  #   if: github.event.pull_request.head.ref == 'main' && github.event.pull_request.merged == true
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: astral-sh/setup-uv@v5
  #     - name: Install the project
  #       run: uv sync
  #     - name: Bump Version
  #       id: bump-version
  #       run: |
  #         echo "VERSION=$(uv run hatch version)" >> $GITHUB_OUTPUT
  #         uv run hatch version release
  #         echo "NEW_VERSION=$(uv run hatch version)" >> $GITHUB_OUTPUT
  #     - name: "Import GPG key"
  #       id: import-gpg
  #       uses: crazy-max/ghaction-import-gpg@v6
  #       with:
  #         gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
  #         passphrase: ${{ secrets.GPG_PASSPHRASE }}
  #         git_user_signingkey: true
  #         git_commit_gpgsign: true
  #     - name: Commit all changed files back to the repository
  #       id: commit-def
  #       uses: stefanzweifel/git-auto-commit-action@v5
  #       with:
  #         commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
  #         commit_user_name: ${{ steps.import-gpg.outputs.name }}
  #         commit_user_email: ${{ steps.import-gpg.outputs.email }}
  #         commit_message: "[auto] Bump version: ${{ steps.bump-version.outputs.VERSION }} â†’ ${{ steps.bump-version.outputs.NEW_VERSION }}"
  #         file_pattern: src/cloud_autopkg_runner/__about__.py
  #         tagging_message: ${{ steps.bump-version.outputs.NEW_VERSION }}

  publish-to-pypi:
    name: Publish to PyPI
    # needs: [update-version]
    runs-on: ubuntu-latest
    environment:
      name: PyPi
      url: https://pypi.org/p/cloud-autopkg-runner
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build
        run: uv build
      - name: Publish
        run: uv publish --trusted-publishing always

  install-library-from-pypi:
    name: Install from PyPI
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    steps:
      - uses: astral-sh/setup-uv@v5
      - name: Install
        run: uv run --with cloud-autopkg-runner --no-project -- python -c "import cloud_autopkg_runner"
